name: Build and Deploy

on:
  push:
    branches:
      - main  # Cambia esto si usas otra rama principal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          # Cambia esta clave para forzar la creación de un nuevo caché
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}-v2
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Asegúrate de que esta versión coincida con tu entorno de desarrollo

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build

      - name: Start SSH agent
        id: ssh-agent
        run: |
          eval "$(ssh-agent -s)"
          echo "SSH_AGENT_PID=$SSH_AGENT_PID" >> $GITHUB_ENV
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV

      - name: Add SSH Key
        env:
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
          SSH_PRIVATE_KEY: ${{ secrets.APP_QUOTE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

      - name: Verify SSH Connection
        env:
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p $SSH_PORT $SSH_HOST >> ~/.ssh/known_hosts
          ssh -p $SSH_PORT -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "echo Connection successful"

      - name: Deploy to server
        env:
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          REMOTE_PATHX:  ${{ secrets.REMOTE_PATH25 }}
        run: |
          rsync -avz -e "ssh -p $SSH_PORT" --delete-after --exclude '.htaccess' build/ $SSH_USER@$SSH_HOST:/app02/appcomercial/
